@page "/fetchdata"

@using Morpher.WebService.V3
@using Morpher.WebService.V3.Qazaq

<h1>Morpher.kz</h1>

<p>Введите слово для склонения:</p>

<input @oninput="OnInput"/>

@if (exception != null)
{
    <p>@exception</p>
}

@if (_declensionResult != null)
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th></th>
                <th>Менiң</th>
                <th>Сенiң</th>
                <th>Сіздiң</th>
                <th>Оның</th>
                <th>Біздiң</th>
                <th>Сендердiң</th>
                <th>Сіздердiң</th>
                <th>Олардың</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in cases)
            {
            <tr>
                <td>@c.Key</td>
                <td>@c.Value(_declensionResult)</td>
                <td>@c.Value(_declensionResult.FirstPerson)</td>
                <td>@c.Value(_declensionResult.SecondPerson)</td>
                <td>@c.Value(_declensionResult.SecondPersonRespectful)</td>
                <td>@c.Value(_declensionResult.ThirdPerson)</td>
                <td>@c.Value(_declensionResult.FirstPersonPlural)</td>
                <td>@c.Value(_declensionResult.SecondPersonPlural)</td>
                <td>@c.Value(_declensionResult.SecondPersonRespectfulPlural)</td>
                <td>@c.Value(_declensionResult.ThirdPersonPlural)</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {

    Dictionary<string, Func<DeclensionForms, string>> cases = new Dictionary<string, Func<DeclensionForms, string>>
    {
        {"Nom", f => f.Nominative },
        {"Gen", f => f.Genitive},
        {"Dat", f => f.Dative },
        {"Acc", f => f.Accusative},
        {"Ins", f => f.Instrumental},
        {"Abl", f => f.Ablative},
        {"Loc", f => f.Locative},
    };

    DeclensionResult _declensionResult;

    MorpherClient _morpher = new MorpherClient();
    Exception exception;

    protected override void OnInitialized()
    {

    }

    void OnInput(ChangeEventArgs e)
    {
        try
        {
            exception = null;
            _declensionResult = null;
            _declensionResult = _morpher.Qazaq.Parse((string) e.Value);
        }
        catch(Exception ex)
        {
            exception = ex;
        }
    }
}
